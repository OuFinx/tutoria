---
---

<div class="theme-toggle">
  <button class="theme-toggle-btn" aria-label="Toggle theme" title="Toggle light/dark theme">
    <svg class="sun-icon" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <circle cx="12" cy="12" r="5"></circle>
      <path d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42"></path>
    </svg>
    <svg class="moon-icon" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
    </svg>
  </button>
</div>

<script>
  function initTheme() {
    // Check for saved theme preference or default to 'light' mode
    const savedTheme = localStorage.getItem('theme');
    const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const theme = savedTheme || (systemPrefersDark ? 'dark' : 'light');
    
    // Apply theme to document
    if (theme === 'dark') {
      document.documentElement.setAttribute('data-theme', 'dark');
    } else {
      document.documentElement.removeAttribute('data-theme');
    }
    
    // Update button state
    updateButtonState(theme);
  }
  
  function updateButtonState(theme) {
    const button = document.querySelector('.theme-toggle-btn');
    const sunIcon = document.querySelector('.sun-icon');
    const moonIcon = document.querySelector('.moon-icon');
    
    if (button && sunIcon && moonIcon) {
      if (theme === 'dark') {
        button.setAttribute('aria-label', 'Switch to light theme');
        button.setAttribute('title', 'Switch to light theme');
        sunIcon.style.display = 'block';
        moonIcon.style.display = 'none';
      } else {
        button.setAttribute('aria-label', 'Switch to dark theme');
        button.setAttribute('title', 'Switch to dark theme');
        sunIcon.style.display = 'none';
        moonIcon.style.display = 'block';
      }
    }
  }
  
  function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    // Apply new theme
    if (newTheme === 'dark') {
      document.documentElement.setAttribute('data-theme', 'dark');
    } else {
      document.documentElement.removeAttribute('data-theme');
    }
    
    // Save preference
    localStorage.setItem('theme', newTheme);
    
    // Update button state
    updateButtonState(newTheme);
  }
  
  // Initialize theme when DOM is loaded
  document.addEventListener('DOMContentLoaded', function() {
    initTheme();
    
    // Add click event listener
    const toggleButton = document.querySelector('.theme-toggle-btn');
    if (toggleButton) {
      toggleButton.addEventListener('click', toggleTheme);
    }
    
    // Listen for system theme changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(e) {
      // Only apply system preference if no theme is saved
      if (!localStorage.getItem('theme')) {
        const theme = e.matches ? 'dark' : 'light';
        if (theme === 'dark') {
          document.documentElement.setAttribute('data-theme', 'dark');
        } else {
          document.documentElement.removeAttribute('data-theme');
        }
        updateButtonState(theme);
      }
    });
  });
  
  // Initialize theme immediately (before DOM loads) to prevent flash
  initTheme();
</script>

<style>
  .theme-toggle {
    display: flex;
    align-items: center;
  }

  .theme-toggle-btn {
    background: none;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    color: rgb(var(--gray-dark));
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
    position: relative;
    overflow: hidden;
  }

  .theme-toggle-btn:hover {
    color: var(--accent);
    background-color: rgba(var(--gray), 0.1);
  }

  .theme-toggle-btn:focus {
    outline: none;
    color: var(--accent);
    background-color: rgba(var(--gray), 0.1);
  }

  .theme-toggle-btn:active {
    transform: scale(0.95);
  }

  .sun-icon,
  .moon-icon {
    transition: all 0.3s ease;
    position: absolute;
  }

  .sun-icon {
    transform: rotate(0deg);
  }

  .moon-icon {
    transform: rotate(180deg);
  }

  /* Animation for smooth icon transition */
  .theme-toggle-btn .sun-icon {
    animation: none;
  }

  .theme-toggle-btn .moon-icon {
    animation: none;
  }

  @media (max-width: 480px) {
    .theme-toggle {
      order: -1;
      margin-right: 0.5rem;
    }
  }
</style>
